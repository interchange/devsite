ActionMap Swish <<EOF
sub {
	my (@args) = split('/', shift);

	# specify search type
	$CGI->{mv_searchtype} = 'swish';
	
	# specify output fields
	my @fields = qw/code dbfile score url title filesize mod_date area purpose/;
	$CGI->{mv_return_fields} = $CGI->{mv_field_names} = join(',', @fields);

	# search string minimum is 2 characters
	$CGI->{mv_min_string} = 2;

	# directory containing Swish index files
	$CGI->{mv_base_directory} = 'swish/db';

	# index files to search
	$CGI->{mv_search_file} = 'olddocs,xmldocs,rtfm';
	
	if ($CGI->{search_mailinglists}) {
		$CGI->{mv_search_file} .= ',mailinglists';
	}

	# derive search string from URL or from parameter
	shift(@args);

	if (@args > 1) {
		my ($rev, $norm);

		if ($args[0] eq $CGI->{sort_before}) {
			$norm = 'r';
		} else {
			$rev = 'r';
		}

		$Tag->tmp('sort_before', $args[0]);

		if ($args[0] eq 'ByDate') {
			$CGI->{mv_sort_field} = 'mod_date';
			$CGI->{mv_sort_option} = "${rev}n";
		} elsif ($args[0] eq 'ByTitle') {
			$CGI->{mv_sort_field} = 'title';
			$CGI->{mv_sort_option} = "${norm}f";
		} elsif ($args[0] eq 'ByScore') {
			$CGI->{mv_sort_field} = 'score';
			$CGI->{mv_sort_option} = "${rev}n";
		} elsif ($args[0] eq 'BySize') {
			$CGI->{mv_sort_field} = 'size';
			$CGI->{mv_sort_option} = "${rev}n";
		}

		shift(@args);
	}

	if ($args[0]) {
		$CGI->{mv_searchspec} = "$args[0]";
	}

	# results page
	$CGI->{mv_nextpage} = 'results';

	# advise Interchange to perform search with the parameters we
	# specified above

	$CGI->{mv_todo} = 'search';
	$Tag->update('process');

	return 1;
}
EOF